name: 'Techdocs Build & Publish'
description: 'Build and publish techdocs to a specified S3 bucket'
inputs:
  aws-role-arn:
    description: 'ARN of AWS role to assume for writing to S3'
    required: true
  bucket-name:
    description: 'Name of the S3 bucket where docs will be published to.'
    required: true
    default: 'updater-techdocs'
  enable-plantuml:
    description: 'Set to the string "true" to install plantuml and its dependencies'
    required: true
    default: 'false'
  entity-name:
    description: 'Name of Backstage entity the docs correspond to.'
    required: true
    default: ''
  entity-kind:
    description: 'Kind of Backstage entity the docs correspond to.'
    required: true
    default: ''
  entity-namespace:
    description: 'Namespace of Backstage entity the docs correspond to.'
    required: true
    default: 'default'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - uses: actions/setup-python@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install techdocs-cli and its dependencies
      shell: bash
      run: |
        if [ "${{ inputs.enable-plantuml }}" = "true" ]; then
          curl -o plantuml.jar -L http://sourceforge.net/projects/plantuml/files/plantuml.1.2021.4.jar/download
          echo "be498123d20eaea95a94b174d770ef94adfdca18  plantuml.jar" | sha1sum -c -
          mv plantuml.jar /opt/plantuml.jar
          mkdir -p "$HOME/.local/bin"
          echo $'#!/bin/sh\n\njava -jar '/opt/plantuml.jar' ${@}' >> "$HOME/.local/bin/plantuml"
          chmod +x "$HOME/.local/bin/plantuml"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo apt-get install -y graphviz
        fi
        
        sudo npm install -g @techdocs/cli
        python -m pip install mkdocs-techdocs-core==0.*
        
        echo "request token:"
        echo $ACTIONS_ID_TOKEN_REQUEST_TOKEN

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: us-east-1

    - name: Build and publish docs site
      shell: bash
      run: |
        ENTITY_KIND=${{ inputs.entity-kind }}
        ENTITY_NAME=${{ inputs.entity-name }}
        
        if [ -z "$ENTITY_KIND" ]; then
          ENTITY_KIND=$(yq eval --no-colors 'select(documentIndex == 0) | .kind' catalog-info.yaml)
        fi
          
        if [ -z "$ENTITY_NAME" ]; then
          ENTITY_NAME=$(yq eval --no-colors 'select(documentIndex == 0) | .metadata.name' catalog-info.yaml)
        fi
        
        techdocs-cli generate --no-docker --verbose
        techdocs-cli publish --publisher-type awsS3 --storage-name ${{ inputs.bucket-name }} --entity ${{ inputs.entity-namespace }}/${ENTITY_KIND}/${ENTITY_NAME}
