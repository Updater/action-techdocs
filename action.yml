name: 'Techdocs Build & Publish'
description: 'Build and publish techdocs to a specified S3 bucket'
inputs:
  aws-region:
    description: 'AWS region to use for authentication'
    required: true
    default: 'us-east-1'
  aws-role-arn:
    description: 'ARN for the AWS role to assume using OIDC'
    required: true
  bucket-name:
    description: 'Name of the S3 bucket where docs will be published to.'
    required: true
    default: 'updater-techdocs'
  enable-plantuml:
    description: 'Set to the string "true" to install plantuml and its dependencies'
    required: true
    default: 'false'
  entity-name:
    description: 'Name of Backstage entity the docs correspond to.'
    required: true
    default: ''
  entity-kind:
    description: 'Kind of Backstage entity the docs correspond to.'
    required: true
    default: ''
  entity-namespace:
    description: 'Namespace of Backstage entity the docs correspond to.'
    required: true
    default: 'default'
  source-dir:
    description: 'Source directory containing mkdocs.yml and docs/ directory.'
    required: true
    default: '.'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: current
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Install planuml
      if: ${{ inputs.enable-plantuml == 'true' }}
      shell: bash
      run: |
        curl -o plantuml.jar -L http://sourceforge.net/projects/plantuml/files/plantuml.1.2021.4.jar/download
        echo "be498123d20eaea95a94b174d770ef94adfdca18  plantuml.jar" | sha1sum -c -
        mv plantuml.jar /opt/plantuml.jar
        mkdir -p "$HOME/.local/bin"
        echo $'#!/bin/sh\n\njava -jar '/opt/plantuml.jar' ${@}' >> "$HOME/.local/bin/plantuml"
        chmod +x "$HOME/.local/bin/plantuml"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo apt-get install -y graphviz

    - name: Install techdocs-cli and its dependencies
      shell: bash
      run: |
        sudo rm -rf /home/runner/.cache/puppeteer
        sudo npm install -f -g @techdocs/cli @mermaid-js/mermaid-cli puppeteer
        python -m pip install mkdocs-techdocs-core==1.*
        python -m pip install markdown-inline-mermaid==1.*

    - name: Build and publish docs site
      shell: bash
      run: |
        techdocs-cli generate --no-docker --verbose --source-dir ${{ inputs.source-dir }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Build and publish docs site
      shell: bash
      run: |
        ENTITY_KIND=${{ inputs.entity-kind }}
        ENTITY_NAME=${{ inputs.entity-name }}

        if [ -z "$ENTITY_KIND" ]; then
          ENTITY_KIND=$(yq eval --no-colors 'select(documentIndex == 0) | .kind' catalog-info.yaml)
        fi

        if [ -z "$ENTITY_NAME" ]; then
          ENTITY_NAME=$(yq eval --no-colors 'select(documentIndex == 0) | .metadata.name' catalog-info.yaml)
        fi

        techdocs-cli publish --publisher-type awsS3 --storage-name ${{ inputs.bucket-name }} --entity ${{ inputs.entity-namespace }}/${ENTITY_KIND}/${ENTITY_NAME}
